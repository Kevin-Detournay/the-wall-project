--
-- PostgreSQL database dump
--

-- Dumped from database version 13.1
-- Dumped by pg_dump version 13.1

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

ALTER TABLE ONLY public.card DROP CONSTRAINT card_list_id_fkey;
ALTER TABLE ONLY public.card_has_tag DROP CONSTRAINT card_has_tag_tag_id_fkey;
ALTER TABLE ONLY public.card_has_tag DROP CONSTRAINT card_has_tag_card_id_fkey;
ALTER TABLE ONLY public.tag DROP CONSTRAINT tag_pkey;
ALTER TABLE ONLY public.list DROP CONSTRAINT list_pkey;
ALTER TABLE ONLY public.card DROP CONSTRAINT card_pkey;
ALTER TABLE ONLY public.card_has_tag DROP CONSTRAINT card_has_tag_pkey;
DROP TABLE public.tag;
DROP TABLE public.list;
DROP TABLE public.card_has_tag;
DROP TABLE public.card;
SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: card; Type: TABLE; Schema: public; Owner: kevin
--

CREATE TABLE public.card (
    id integer NOT NULL,
    content text NOT NULL,
    "position" integer DEFAULT 0 NOT NULL,
    color text,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone,
    list_id integer NOT NULL
);


ALTER TABLE public.card OWNER TO kevin;

--
-- Name: card_has_tag; Type: TABLE; Schema: public; Owner: kevin
--

CREATE TABLE public.card_has_tag (
    id integer NOT NULL,
    card_id integer NOT NULL,
    tag_id integer NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.card_has_tag OWNER TO kevin;

--
-- Name: card_has_tag_id_seq; Type: SEQUENCE; Schema: public; Owner: kevin
--

ALTER TABLE public.card_has_tag ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.card_has_tag_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: card_id_seq; Type: SEQUENCE; Schema: public; Owner: kevin
--

ALTER TABLE public.card ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.card_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: list; Type: TABLE; Schema: public; Owner: kevin
--

CREATE TABLE public.list (
    id integer NOT NULL,
    name text NOT NULL,
    "position" integer DEFAULT 0 NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone
);


ALTER TABLE public.list OWNER TO kevin;

--
-- Name: list_id_seq; Type: SEQUENCE; Schema: public; Owner: kevin
--

ALTER TABLE public.list ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.list_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: tag; Type: TABLE; Schema: public; Owner: kevin
--

CREATE TABLE public.tag (
    id integer NOT NULL,
    name text NOT NULL,
    color text,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone
);


ALTER TABLE public.tag OWNER TO kevin;

--
-- Name: tag_id_seq; Type: SEQUENCE; Schema: public; Owner: kevin
--

ALTER TABLE public.tag ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.tag_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Data for Name: card; Type: TABLE DATA; Schema: public; Owner: kevin
--

COPY public.card (id, content, "position", color, created_at, updated_at, list_id) FROM stdin;
45	Cliquer sur le "+" en haut de la liste pour \r\najouter une carte . \r\n\r\nPour en modifier le texte, il suffit de  Double cliquer dessus . (le petit crayon vert ça marche aussi)\r\nCliquer sur valider pour ... valider\r\n	0	#f9f4a3	2021-01-18 19:11:43.782+01	2021-01-18 20:51:02.715+01	21
40	Le front est codé en vanilla JS , le framework Css \r\nBulma était imposé.	0	\N	2021-01-18 18:56:20.179+01	2021-01-18 19:15:52.553+01	4
41	j'ai utilisé la libraire SortableJS pour le drag and drop	1	\N	2021-01-18 18:57:58.827+01	2021-01-18 19:15:52.558+01	4
14	L'API a été codée a La main avec Node.js et Express	0	\N	2021-01-15 20:32:10.882+01	2021-01-18 20:08:42.865+01	1
42	Voici un prototype d'une application Kanban, pour pouvoir réaliser toutes sortes de \r\n"To Do" Listes	0	\N	2021-01-18 19:00:37.936+01	2021-01-18 20:26:40.695+01	2
44	le Contenu est Volontairement publique , et n'a pour but que de montrer mon travail aux recruteurs qui passent sur mon site 	1	\N	2021-01-18 19:10:07.817+01	2021-01-18 20:26:40.707+01	2
43	Attention les Cartes et listes que vous ajoutez sont injectés en base de données, \r\nelles sont donc visibles, modifiables, et supprimables par TOUT LES \r\nVISITEURS\r\n	2	\N	2021-01-18 19:03:43.953+01	2021-01-18 20:26:40.711+01	2
46	Toutes les cartes et les listes sont interchangeables avec un glissé déposé , \r\nn'hésites pas a mettre ta carte en haut de la liste pour que je puisse la lire	1	\N	2021-01-18 19:39:45.17+01	2021-01-18 20:46:56.485+01	21
\.


--
-- Data for Name: card_has_tag; Type: TABLE DATA; Schema: public; Owner: kevin
--

COPY public.card_has_tag (id, card_id, tag_id, created_at) FROM stdin;
74	14	3	2021-01-18 20:31:38.521583+01
80	40	1	2021-01-18 20:38:41.879118+01
82	45	2	2021-01-18 20:39:59.031062+01
83	46	4	2021-01-18 20:42:31.652407+01
81	41	1	2021-01-18 20:38:43.775318+01
\.


--
-- Data for Name: list; Type: TABLE DATA; Schema: public; Owner: kevin
--

COPY public.list (id, name, "position", created_at, updated_at) FROM stdin;
2	Descriptif de l'application:	0	2021-01-15 19:27:05.982223+01	2021-01-18 20:51:38.244+01
1	première liste	1	2021-01-15 19:27:05.982223+01	2021-01-18 20:51:38.279+01
4	nouvelle liste	2	2021-01-15 20:32:31.879+01	2021-01-18 20:51:38.299+01
21	Pour les mots doux, c'est Ici	3	2021-01-18 19:11:17.807+01	2021-01-18 20:51:38.326+01
\.


--
-- Data for Name: tag; Type: TABLE DATA; Schema: public; Owner: kevin
--

COPY public.tag (id, name, color, created_at, updated_at) FROM stdin;
3	back-end	#d1a3f9	2021-01-15 19:27:05.982223+01	2021-01-18 20:37:34.331+01
1	front-end	#a3b4f9	2021-01-15 19:27:05.982223+01	2021-01-18 20:38:17.179+01
2	urgent	#f9a3a3	2021-01-15 19:27:05.982223+01	2021-01-18 20:39:49.195+01
4	perso	#a3f9a7	2021-01-18 20:32:49.725+01	2021-01-18 20:42:20.017+01
\.


--
-- Name: card_has_tag_id_seq; Type: SEQUENCE SET; Schema: public; Owner: kevin
--

SELECT pg_catalog.setval('public.card_has_tag_id_seq', 83, true);


--
-- Name: card_id_seq; Type: SEQUENCE SET; Schema: public; Owner: kevin
--

SELECT pg_catalog.setval('public.card_id_seq', 47, true);


--
-- Name: list_id_seq; Type: SEQUENCE SET; Schema: public; Owner: kevin
--

SELECT pg_catalog.setval('public.list_id_seq', 21, true);


--
-- Name: tag_id_seq; Type: SEQUENCE SET; Schema: public; Owner: kevin
--

SELECT pg_catalog.setval('public.tag_id_seq', 5, true);


--
-- Name: card_has_tag card_has_tag_pkey; Type: CONSTRAINT; Schema: public; Owner: kevin
--

ALTER TABLE ONLY public.card_has_tag
    ADD CONSTRAINT card_has_tag_pkey PRIMARY KEY (id);


--
-- Name: card card_pkey; Type: CONSTRAINT; Schema: public; Owner: kevin
--

ALTER TABLE ONLY public.card
    ADD CONSTRAINT card_pkey PRIMARY KEY (id);


--
-- Name: list list_pkey; Type: CONSTRAINT; Schema: public; Owner: kevin
--

ALTER TABLE ONLY public.list
    ADD CONSTRAINT list_pkey PRIMARY KEY (id);


--
-- Name: tag tag_pkey; Type: CONSTRAINT; Schema: public; Owner: kevin
--

ALTER TABLE ONLY public.tag
    ADD CONSTRAINT tag_pkey PRIMARY KEY (id);


--
-- Name: card_has_tag card_has_tag_card_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: kevin
--

ALTER TABLE ONLY public.card_has_tag
    ADD CONSTRAINT card_has_tag_card_id_fkey FOREIGN KEY (card_id) REFERENCES public.card(id) ON DELETE CASCADE;


--
-- Name: card_has_tag card_has_tag_tag_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: kevin
--

ALTER TABLE ONLY public.card_has_tag
    ADD CONSTRAINT card_has_tag_tag_id_fkey FOREIGN KEY (tag_id) REFERENCES public.tag(id) ON DELETE CASCADE;


--
-- Name: card card_list_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: kevin
--

ALTER TABLE ONLY public.card
    ADD CONSTRAINT card_list_id_fkey FOREIGN KEY (list_id) REFERENCES public.list(id) ON DELETE CASCADE;


--
-- PostgreSQL database dump complete
--

